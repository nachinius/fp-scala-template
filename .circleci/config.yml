version: 2.1

jobs:
  build:
    docker:
      - image: cimg/openjdk:11.0
    
    working_directory: ~/project
    
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    
    steps:
      # Standard checkout - CircleCI should handle this automatically
      - checkout
      
      # Cache SBT and dependencies
      - restore_cache:
          keys:
            - sbt-deps-v4-{{ checksum "build.sbt" }}-{{ checksum "project/Dependencies.scala" }}-{{ checksum "project/build.properties" }}
            - sbt-deps-v4-{{ checksum "build.sbt" }}-{{ checksum "project/Dependencies.scala" }}
            - sbt-deps-v4-{{ checksum "build.sbt" }}
            - sbt-deps-v4-
      
      # Install SBT using the most reliable method
      - run:
          name: Install SBT
          command: |
            # Update package list
            sudo apt-get update
            
            # Install required packages
            sudo apt-get install -y curl gnupg software-properties-common
            
            # Add SBT repository and key
            echo "deb https://repo.scala-sbt.org/scalasbt/debian all main" | sudo tee /etc/apt/sources.list.d/sbt.list
            curl -sL "https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x2EE0EA64E40A89B84B2DF73499E82A75642AC823" | sudo apt-key add -
            
            # Update and install SBT
            sudo apt-get update
            sudo apt-get install -y sbt
            
            # Verify SBT installation
            sbt about
      
      # Compile the project
      - run:
          name: Compile
          command: |
            echo "Compiling Scala project..."
            sbt compile
      
      # Run tests
      - run:
          name: Test
          command: |
            echo "Running tests..."
            sbt test
      
      # Check formatting (optional, non-blocking)
      - run:
          name: Check formatting
          command: |
            echo "Checking code formatting..."
            sbt scalafmtCheckAll || echo "Formatting check failed - consider running 'sbt scalafmt'"
      
      # Package the application
      - run:
          name: Package
          command: |
            echo "Packaging application..."
            sbt package
      
      # Save cache
      - save_cache:
          key: sbt-deps-v4-{{ checksum "build.sbt" }}-{{ checksum "project/Dependencies.scala" }}-{{ checksum "project/build.properties" }}
          paths:
            - ~/.ivy2/cache
            - ~/.sbt
            - ~/.cache/coursier
      
      # Store test results
      - store_test_results:
          path: target/test-reports
      
      # Store artifacts
      - store_artifacts:
          path: target/scala-2.13
          destination: artifacts

workflows:
  version: 2
  build_and_test:
    jobs:
      - build